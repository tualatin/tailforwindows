<Window
  x:Class="Org.Vs.TailForWin.BaseView.T4Window"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:baseViewControls="clr-namespace:Org.Vs.TailForWin.BaseView.UserControls"
  xmlns:colorResources="clr-namespace:Org.Vs.TailForWin.Ui.PlugIns.Resources;assembly=T4WUi.Plugins"
  xmlns:commands="clr-namespace:Org.Vs.TailForWin.Controllers.Commands;assembly=T4WControllers"
  xmlns:dragSupportUtils="clr-namespace:Org.Vs.TailForWin.UI.UserControls.DragSupportUtils"
  xmlns:environment="clr-namespace:Org.Vs.TailForWin.Core.Controllers;assembly=T4WCore"
  xmlns:intr="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
  xmlns:tb="http://www.hardcodet.net/taskbar"
  xmlns:utils="clr-namespace:Org.Vs.TailForWin.Business.Utils;assembly=T4WBusiness"
  xmlns:viewModels="clr-namespace:Org.Vs.TailForWin.BaseView.ViewModels"
  xmlns:vml="clr-namespace:Org.Vs.TailForWin.Controllers.UI.Vml;assembly=T4WControllers"
  xmlns:vsControls="clr-namespace:Org.Vs.TailForWin.Ui.PlugIns.VsControls;assembly=T4WUi.Plugins"
  mc:Ignorable="d"
  x:Name="MainWindow"
  Title="{Binding Source={x:Static utils:EnvironmentContainer.ApplicationTitle}}"
  Width="{Binding Width, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
  Height="{Binding Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
  MinWidth="850"
  MinHeight="600"
  AllowsTransparency="True"
  Closing="MainWindowClosing"
  Icon="/T4W;component/Resources/Main.ico"
  Left="{Binding WindowPositionX, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
  ResizeMode="CanResizeWithGrip"
  StateChanged="MainWindowStateChanged"
  Style="{Binding T4WindowsStyle, UpdateSourceTrigger=PropertyChanged}"
  Top="{Binding WindowPositionY, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
  Topmost="{Binding Source={x:Static environment:SettingsHelperController.CurrentSettings}, Path=AlwaysOnTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
  WindowState="{Binding WindowState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
  WindowStyle="None"
  vml:ViewModelLocator.IsAutomaticLocator="True"
  >
  <intr:Interaction.Triggers>
    <intr:EventTrigger EventName="Closing">
      <commands:InvokeDelegateCommandAction
        Command="{Binding WndClosingCommand}"
        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}"
        />
    </intr:EventTrigger>

    <intr:EventTrigger EventName="Loaded">
      <intr:InvokeCommandAction Command="{Binding LoadedCommand}" />
    </intr:EventTrigger>

    <intr:EventTrigger EventName="PreviewKeyDown">
      <commands:InvokeDelegateCommandAction
        Command="{Binding PreviewKeyDownCommand}"
        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}"
        />
    </intr:EventTrigger>

    <intr:EventTrigger EventName="Activated">
      <intr:InvokeCommandAction Command="{Binding ActivatedCommand}" />
    </intr:EventTrigger>

    <intr:EventTrigger EventName="Deactivated">
      <intr:InvokeCommandAction Command="{Binding DeactivatedCommand}" />
    </intr:EventTrigger>
  </intr:Interaction.Triggers>

  <Window.Resources />

  <Window.InputBindings>
    <KeyBinding Key="{Binding Key, Source={StaticResource GoToLineKeyBinding}, Mode=OneTime}" Command="{Binding GoToLineCommand}" Modifiers="{Binding Modifiers, Source={StaticResource GoToLineKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource QuickSearchKeyBinding}, Mode=OneTime}" Command="{Binding QuickSearchCommand}" Modifiers="{Binding Modifiers, Source={StaticResource QuickSearchKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource ToggleAlwaysOnTopKeyBinding}, Mode=OneTime}" Command="{Binding ToggleAlwaysOnTopCommand}" Modifiers="{Binding Modifiers, Source={StaticResource ToggleAlwaysOnTopKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource NewTabItemKeyBinding}, Mode=OneTime}" Command="{Binding AddNewTabItemCommand}" Modifiers="{Binding Modifiers, Source={StaticResource NewTabItemKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource CloseTabItemKeyBinding}, Mode=OneTime}" Command="{Binding CloseTabItemCommand}" Modifiers="{Binding Modifiers, Source={StaticResource CloseTabItemKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource FindWhatKeyBinding}, Mode=OneTime}" Command="{Binding FindWhatCommand}" Modifiers="{Binding Modifiers, Source={StaticResource FindWhatKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource FindWhatResultKeyBinding}, Mode=OneTime}" Command="{Binding FindWhatResultCommand}" Modifiers="{Binding Modifiers, Source={StaticResource FindWhatResultKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource OpenFileManagerKeyBinding}, Mode=OneTime}" Command="{Binding OpenFileManagerCommand}" Modifiers="{Binding Modifiers, Source={StaticResource OpenFileManagerKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource OpenFilterManagerKeyBinding}, Mode=OneTime}" Command="{Binding OpenFilterManagerCommand}" Modifiers="{Binding Modifiers, Source={StaticResource OpenFilterManagerKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource ToggleFilterKeyBinding}, Mode=OneTime}" Command="{Binding ToggleFilterCommand}" Modifiers="{Binding Modifiers, Source={StaticResource ToggleFilterKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource QuickSaveKeyBinding}, Mode=OneTime}" Command="{Binding QuickSaveCommand}" Modifiers="{Binding Modifiers, Source={StaticResource QuickSaveKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource OpenFileKeyBinding}, Mode=OneTime}" Command="{Binding OpenFileCommand}" Modifiers="{Binding Modifiers, Source={StaticResource OpenFileKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource ClearTailWindowKeyBinding}, Mode=OneTime}" Command="{Binding ClearTailLogCommand}" Modifiers="{Binding Modifiers, Source={StaticResource ClearTailWindowKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource StartTailKeyBinding}, Mode=OneTime}" Command="{Binding StartTailCommand}" Modifiers="{Binding Modifiers, Source={StaticResource StartTailKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource StopTailKeyBinding}, Mode=OneTime}" Command="{Binding StopTailCommand}" Modifiers="{Binding Modifiers, Source={StaticResource StopTailKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource QuickAddKeyBinding}, Mode=OneTime}" Command="{Binding QuickAddCommand}" Modifiers="{Binding Modifiers, Source={StaticResource QuickAddKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource OpenFontKeyBinding}, Mode=OneTime}" Command="{Binding OpenFontCommand}" Modifiers="{Binding Modifiers, Source={StaticResource OpenFontKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource MinimizeWndKeyBinding}, Mode=OneTime}" Command="{Binding MinimizeWindowCommand}" CommandParameter="{Binding ElementName=MainWindow}" Modifiers="{Binding Modifiers, Source={StaticResource MinimizeWndKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource OpenWindowsEventKeyBinding}, Mode=OneTime}" Command="{Binding OpenWindowsEventCommand}" Modifiers="{Binding Modifiers, Source={StaticResource OpenWindowsEventKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource OpenHelpKeyBinding}, Mode=OneTime}" Command="{Binding OpenHelpCommand}" Modifiers="{Binding Modifiers, Source={StaticResource OpenHelpKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource ShowExtendedToolbarKeyBinding}, Mode=OneTime}" Command="{Binding ShowExtendedToolbarCommand}" Modifiers="{Binding Modifiers, Source={StaticResource ShowExtendedToolbarKeyBinding}, Mode=OneTime}" />
    <KeyBinding Key="{Binding Key, Source={StaticResource ShowBookmarkOverviewKeyBinding}, Mode=OneTime}" Command="{Binding ShowBookmarkOverviewCommand}" Modifiers="{Binding Modifiers, Source={StaticResource ShowBookmarkOverviewKeyBinding}, Mode=OneTime}" />
  </Window.InputBindings>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition />
      <RowDefinition Height="25" />
    </Grid.RowDefinitions>

    <Border
      Grid.Row="0"
      BorderBrush="{DynamicResource {x:Static colorResources:ColorResources.BrushSolidBlueKey}}"
      BorderThickness="1 0 1 1"
      >
      <dragSupportUtils:DragSupportTabControl
        x:Name="DragSupportTabControl"
        ItemsSource="{Binding TabItemsSource, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        SelectedItem="{Binding SelectedTabItem, Mode=TwoWay}"
        Style="{StaticResource DragSupportTabControlStyle}"
        >
        <intr:Interaction.Triggers>
          <intr:EventTrigger EventName="AddTabItemEvent">
            <intr:InvokeCommandAction Command="{Binding AddNewTabItemCommand}" />
          </intr:EventTrigger>
        </intr:Interaction.Triggers>
      </dragSupportUtils:DragSupportTabControl>
    </Border>

    <baseViewControls:MainWindowStatusBar Grid.Row="1" />

    <!--  TaskbarIcon part  -->
    <tb:TaskbarIcon
      x:Name="TbIcon"
      IconSource="/T4W;component/Resources/Main.ico"
      LeftClickCommand="{Binding TrayIconLeftCommand}"
      >
      <tb:TaskbarIcon.ContextMenu>
        <ContextMenu ItemsSource="{Binding TrayIconItemsSource}" />
      </tb:TaskbarIcon.ContextMenu>

      <tb:TaskbarIcon.TrayToolTip>
        <vsControls:FancyToolTip
          ApplicationText="{Binding Source={x:Static utils:EnvironmentContainer.ApplicationTitle}}"
          InfoText="{Binding Source={x:Static viewModels:BaseWindowStatusbarViewModel.Instance}, Path=CurrentBusyState, UpdateSourceTrigger=PropertyChanged}"
          Opacity="0.85"
          />
      </tb:TaskbarIcon.TrayToolTip>
    </tb:TaskbarIcon>
  </Grid>
</Window>
