<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controllers="clr-namespace:Org.Vs.TailForWin.Core.Controllers;assembly=T4WCore"
  xmlns:data="clr-namespace:Org.Vs.TailForWin.Business.Services.Data;assembly=T4WBusiness"
  xmlns:logWindowListBox="clr-namespace:Org.Vs.TailForWin.PlugIns.LogWindowModule.LogWindowUserControl"
  xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
  xmlns:userControls="clr-namespace:Org.Vs.TailForWin.UI.UserControls"
  >
  <Style x:Key="MyLineNumberText" TargetType="{x:Type TextBlock}">
    <Setter Property="Foreground" Value="{Binding Source={x:Static controllers:SettingsHelperController.CurrentSettings}, Path=ColorSettings.LineNumberColorHex, Converter={StaticResource StringToWindowMediaBrushConverter}, UpdateSourceTrigger=PropertyChanged}" />
    <Setter Property="Text" Value="{Binding Index, Mode=OneWay}" />
    <Setter Property="TextAlignment" Value="Right" />
    <Style.Triggers>
      <DataTrigger Value="True" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">
        <Setter Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{Binding Source={x:Static controllers:SettingsHelperController.CurrentSettings}, Path=ColorSettings.LineNumberHighlightColorHex, Converter={StaticResource StringToWindowsMediaColorConverter}, UpdateSourceTrigger=PropertyChanged}" po:Freeze="True" />
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="MyTextEditor" TargetType="{x:Type userControls:HighlightTextBlock}">
    <Setter Property="HighlightableText" Value="{Binding Message, Mode=OneWay}" />
    <Setter Property="TextWrapping" Value="{Binding Path=CurrentTailData.Wrap, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type logWindowListBox:LogWindowListBox}}, Converter={StaticResource BoolToTextWrapConverter}}" />
  </Style>

  <Style x:Key="MyEditTextEditor" TargetType="{x:Type TextBox}">
    <Setter Property="IsReadOnly" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border
            Name="Border"
            Margin="-2 0"
            Padding="0"
            Background="Transparent"
            BorderThickness="0"
            >
            <ScrollViewer
              x:Name="PART_ContentHost"
              Margin="0"
              />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="ReadOnly">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="Border"
                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                      >
                      <EasingColorKeyFrame
                        Value="Transparent"
                        KeyTime="0"
                        />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Text" Value="{Binding Message, Mode=OneWay}" />
    <Setter Property="TextWrapping" Value="{Binding Path=CurrentTailData.Wrap, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type logWindowListBox:LogWindowListBox}}, Converter={StaticResource BoolToTextWrapConverter}}" />
    <Setter Property="Visibility" Value="Collapsed" />
  </Style>

  <Style x:Key="MyDateTimeEditor" TargetType="{x:Type TextBlock}">
    <Setter Property="Text" Value="{Binding DateTime, Mode=OneWay, Converter={StaticResource StringFormatConverter}}" />
  </Style>

  <DataTemplate x:Key="DateTimeLineNumberTemplate" DataType="{x:Type data:LogEntry}">
    <SelectiveScrollingGrid
      x:Name="DataTemplateGrid"
      IsSharedSizeScope="True"
      >
      <SelectiveScrollingGrid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
      </SelectiveScrollingGrid.ColumnDefinitions>

      <Grid
        x:Name="Chrome"
        Grid.Column="1"
        >
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" SharedSizeGroup="Date" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <TextBlock
          x:Name="DateTimeEditor"
          Grid.Column="0"
          Style="{StaticResource MyDateTimeEditor}"
          Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type logWindowListBox:LogWindowListBox}}, Path=CurrentTailData.Timestamp, Converter={StaticResource BoolToVisibilityConverter}}"
          >
          <TextBlock.Margin>
            <MultiBinding Converter="{StaticResource VisibilityToMarginMultiConverter}" ConverterParameter="DateTimeEditor">
              <Binding
                ElementName="BorderLineNumber"
                Path="Visibility"
                />
            </MultiBinding>
          </TextBlock.Margin>
        </TextBlock>

        <TextBox
          x:Name="TextBoxReadOnly"
          Grid.Column="1"
          Style="{StaticResource MyEditTextEditor}"
          >
          <TextBox.Margin>
            <MultiBinding Converter="{StaticResource VisibilityToMarginMultiConverter}" ConverterParameter="TextBoxMessage">
              <Binding
                ElementName="BorderLineNumber"
                Path="Visibility"
                />
              <Binding
                ElementName="DateTimeEditor"
                Path="Visibility"
                />
            </MultiBinding>
          </TextBox.Margin>
        </TextBox>

        <userControls:HighlightTextBlock
          x:Name="TextBoxMessage"
          Grid.Column="1"
          HighlightText="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type logWindowListBox:LogWindowListBox}}, Path=HighlightDataResult}"
          Style="{StaticResource MyTextEditor}"
          >
          <userControls:HighlightTextBlock.Margin>
            <MultiBinding Converter="{StaticResource VisibilityToMarginMultiConverter}" ConverterParameter="TextBoxMessage">
              <Binding
                ElementName="BorderLineNumber"
                Path="Visibility"
                />
              <Binding
                ElementName="DateTimeEditor"
                Path="Visibility"
                />
            </MultiBinding>
          </userControls:HighlightTextBlock.Margin>
        </userControls:HighlightTextBlock>
      </Grid>

      <Grid
        Grid.Column="0"
        Background="{Binding Source={x:Static controllers:SettingsHelperController.CurrentSettings}, Path=ColorSettings.BackgroundColorHex, Converter={StaticResource StringToWindowMediaBrushConverter}, UpdateSourceTrigger=PropertyChanged}"
        SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
        >
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="20" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Border
          Grid.Column="0"
          Background="{Binding Source={x:Static controllers:SettingsHelperController.CurrentSettings}, Path=ColorSettings.LineNumberColorHex, Converter={StaticResource StringToWindowMediaBrushConverter}, UpdateSourceTrigger=PropertyChanged}"
          Opacity="0.12"
          />

        <Image
          x:Name="TextBoxBookmarkPoint"
          Grid.Column="0"
          Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type logWindowListBox:LogWindowListBox}}, Path=BookmarkImageSize}"
          Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type logWindowListBox:LogWindowListBox}}, Path=BookmarkImageSize}"
          Margin="2 0"
          Source="{Binding Path=BookmarkPoint}"
          >
          <Image.ToolTip>
            <ToolTip
              Content="{Binding Path=BookmarkToolTip}"
              Style="{StaticResource BookmarkCommentToolTipStyle}"
              Visibility="{Binding Path=BookmarkToolTip, Converter={StaticResource StringToVisibilityConverter}}"
              />
          </Image.ToolTip>
        </Image>

        <Border
          x:Name="BorderLineNumber"
          Grid.Column="1"
          MinWidth="60"
          BorderThickness="0 0 1 0"
          Cursor="/T4W;component/Resources/RightArrow.cur"
          Visibility="{Binding Source={x:Static controllers:SettingsHelperController.CurrentSettings}, Path=ShowLineNumbers, Converter={StaticResource BoolToVisibilityConverter}}"
          >
          <Border.BorderBrush>
            <VisualBrush>
              <VisualBrush.Visual>
                <Rectangle
                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"
                  Stroke="{Binding Source={x:Static controllers:SettingsHelperController.CurrentSettings}, Path=ColorSettings.LineNumberColorHex, Converter={StaticResource StringToWindowMediaBrushConverter}, UpdateSourceTrigger=PropertyChanged}"
                  StrokeDashArray="2 6"
                  StrokeThickness="0.6"
                  />
              </VisualBrush.Visual>
            </VisualBrush>
          </Border.BorderBrush>

          <TextBlock
            x:Name="TextBoxLineNumbers"
            Margin="1 0 10 0"
            Style="{StaticResource MyLineNumberText}"
            />
        </Border>
      </Grid>
    </SelectiveScrollingGrid>

    <DataTemplate.Triggers>
      <DataTrigger Value="True" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">
        <Setter TargetName="Chrome" Property="Background">
          <Setter.Value>
            <SolidColorBrush Color="{Binding Source={x:Static controllers:SettingsHelperController.CurrentSettings}, Path=ColorSettings.SelectionBackgroundColorHex, Converter={StaticResource StringToWindowsMediaColorConverter}, UpdateSourceTrigger=PropertyChanged}" Opacity="0.4" po:Freeze="True" />
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>

  <Style x:Key="ItemStyle" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <ContentPresenter x:Name="Presenter" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type logWindowListBox:LogWindowListBox}" TargetType="{x:Type logWindowListBox:LogWindowListBox}">
    <Setter Property="Background" Value="{Binding Source={x:Static controllers:SettingsHelperController.CurrentSettings}, Path=ColorSettings.BackgroundColorHex, Converter={StaticResource StringToWindowMediaBrushConverter}, UpdateSourceTrigger=PropertyChanged}" />
    <Setter Property="Foreground" Value="{Binding Source={x:Static controllers:SettingsHelperController.CurrentSettings}, Path=ColorSettings.ForegroundColorHex, Converter={StaticResource StringToWindowMediaBrushConverter}, UpdateSourceTrigger=PropertyChanged}" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource ItemStyle}" />
    <Setter Property="ItemTemplate" Value="{StaticResource DateTimeLineNumberTemplate}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel VirtualizingPanel.ScrollUnit="Item" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type logWindowListBox:LogWindowListBox}">
          <Grid Background="{TemplateBinding Background}">
            <Rectangle
              Width="20"
              HorizontalAlignment="Left"
              Fill="{Binding Source={x:Static controllers:SettingsHelperController.CurrentSettings}, Path=ColorSettings.LineNumberColorHex, Converter={StaticResource StringToWindowMediaBrushConverter}, UpdateSourceTrigger=PropertyChanged}"
              Opacity="0.12"
              />

            <ScrollViewer
              x:Name="ScrollViewer"
              CanContentScroll="True"
              HorizontalScrollBarVisibility="{Binding Path=CurrentTailData.Wrap, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type logWindowListBox:LogWindowListBox}}, Converter={StaticResource BoolToScrollbarVisibility}}"
              IsDeferredScrollingEnabled="True"
              VerticalScrollBarVisibility="Auto"
              >
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ScrollContentPresenter
                      x:Name="PART_ScrollContentPresenter"
                      Grid.Row="1"
                      Grid.ColumnSpan="2"
                      CanContentScroll="{TemplateBinding CanContentScroll}"
                      />

                    <ScrollBar
                      Name="PART_VerticalScrollBar"
                      Grid.Row="1"
                      Grid.Column="2"
                      Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                      Maximum="{TemplateBinding ScrollableHeight}"
                      Orientation="Vertical"
                      ViewportSize="{TemplateBinding ViewportHeight}"
                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                      />

                    <Grid
                      Grid.Row="2"
                      Grid.Column="1"
                      >
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>

                      <Border
                        Grid.Column="0"
                        Height="18"
                        Background="{StaticResource BrushSolidWhite}"
                        BorderBrush="{StaticResource BrushSolidGrey20}"
                        BorderThickness="1"
                        >
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                          </Grid.ColumnDefinitions>

                          <StackPanel
                            Grid.Column="0"
                            Orientation="Horizontal"
                            >
                            <Button
                              Height="10"
                              Margin="5 0"
                              Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type logWindowListBox:LogWindowListBox}}, Path=UndoCommand}"
                              ToolTip="{DynamicResource FileManagerUndo}"
                              >
                              <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                  <Grid>
                                    <Grid.ColumnDefinitions>
                                      <ColumnDefinition Width="Auto" />
                                      <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Image
                                      Grid.Column="0"
                                      RenderOptions.BitmapScalingMode="HighQuality"
                                      RenderOptions.EdgeMode="Aliased"
                                      Source="/T4W;component/Resources/Cancel.ico"
                                      >
                                      <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                          <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                              <Setter Property="Opacity" Value="0.5" />
                                            </Trigger>
                                          </Style.Triggers>
                                        </Style>
                                      </Image.Style>
                                    </Image>

                                    <Label
                                      x:Name="ButtonLabel"
                                      Grid.Column="1"
                                      Margin="4 -1 2 0"
                                      Content="{DynamicResource FileManagerUndo}"
                                      FontFamily="Calibri"
                                      FontSize="11"
                                      />
                                  </Grid>

                                  <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                      <Setter TargetName="ButtonLabel" Property="Foreground" Value="#6DC2E9" />
                                    </Trigger>
                                  </ControlTemplate.Triggers>
                                </ControlTemplate>
                              </Button.Template>
                            </Button>
                          </StackPanel>

                          <StackPanel
                            Grid.Column="1"
                            Orientation="Horizontal"
                            Visibility="{Binding ElementName=BookmarkOverviewButton, Path=IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                            >
                            <Rectangle
                              Width="1"
                              Margin="3 2"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Fill="Black"
                              SnapsToDevicePixels="True"
                              />

                            <Label
                              x:Name="BookmarkCountLabel"
                              Margin="0 0 3 0"
                              VerticalAlignment="Center"
                              ContentStringFormat="{DynamicResource BookmarkOverviewBookmarkCount}"
                              FontFamily="Calibri"
                              FontSize="11"
                              />

                            <Button
                              x:Name="BookmarkOverviewButton"
                              Width="10"
                              Height="10"
                              Margin="0 0 3 0"
                              Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type logWindowListBox:LogWindowListBox}}, Path=BookmarkOverviewCommand}"
                              SnapsToDevicePixels="True"
                              ToolTip="{DynamicResource LogWindowControlOpenBookmarkOverviewToolTip}"
                              >
                              <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                  <Grid>
                                    <Ellipse
                                      x:Name="BookmarkEllipse"
                                      Margin="1"
                                      Fill="Black"
                                      Stretch="Uniform"
                                      />
                                  </Grid>

                                  <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                      <Setter TargetName="BookmarkEllipse" Property="Fill" Value="#6DC2E9" />
                                    </Trigger>

                                    <Trigger Property="IsEnabled" Value="False">
                                      <Setter TargetName="BookmarkEllipse" Property="Fill" Value="{StaticResource BrushSolidGrey55}" />
                                    </Trigger>
                                  </ControlTemplate.Triggers>
                                </ControlTemplate>
                              </Button.Template>
                            </Button>
                          </StackPanel>
                        </Grid>
                      </Border>

                      <ScrollBar
                        Name="PART_HorizontalScrollBar"
                        Grid.Column="1"
                        Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        Orientation="Horizontal"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                        />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter />
            </ScrollViewer>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="VirtualizingStackPanel.CacheLength" Value="1,2" />
    <Setter Property="VirtualizingStackPanel.CacheLengthUnit" Value="Item" />
    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
    <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
  </Style>
</ResourceDictionary>
