<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converters="clr-namespace:Org.Vs.TailForWin.UI.Converters"
  >
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Shared.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

  <!--<SnippetTreeView>-->
  <Style x:Key="{x:Type TreeView}" TargetType="TreeView">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TreeView">
          <Border
            Name="Border"
            BorderThickness="1"
            >
            <Border.BorderBrush>
              <SolidColorBrush Color="{DynamicResource BorderLightColor}" />
            </Border.BorderBrush>
            <Border.Background>
              <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
            </Border.Background>
            <ScrollViewer
              Padding="4"
              CanContentScroll="False"
              Focusable="False"
              >
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid
            Width="15"
            Height="13"
            Background="Transparent"
            >
            <Path
              x:Name="Collapsed"
              Margin="1 1 1 1"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Data="M 4 0 L 8 4 L 4 8 Z"
              >
              <Path.Fill>
                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
              </Path.Fill>
            </Path>
            <Path
              x:Name="Expanded"
              Margin="1 1 1 1"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Data="M 0 4 L 8 4 L 4 8 Z"
              Visibility="Hidden"
              >
              <Path.Fill>
                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
              </Path.Fill>
            </Path>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetName="Collapsed"
                      Storyboard.TargetProperty="(UIElement.Visibility)"
                      >
                      <DiscreteObjectKeyFrame
                        Value="{x:Static Visibility.Hidden}"
                        KeyTime="0"
                        />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetName="Expanded"
                      Storyboard.TargetProperty="(UIElement.Visibility)"
                      >
                      <DiscreteObjectKeyFrame
                        Value="{x:Static Visibility.Visible}"
                        KeyTime="0"
                        />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle
              Margin="0 0 0 0"
              Opacity="0"
              Stroke="Black"
              StrokeDashArray="1 2"
              StrokeThickness="5"
              />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="IsEnabled" Value="{Binding Path=IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    <Setter Property="Padding" Value="1 0 0 0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" MinWidth="19" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton
              x:Name="Expander"
              ClickMode="Press"
              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
              Style="{StaticResource ExpandCollapseToggleStyle}"
              />
            <!--  ReSharper disable once Xaml.MissingGridIndex  -->
            <Border
              x:Name="Bd"
              Grid.Column="1"
              Padding="5 2"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              >
              <ContentPresenter
                x:Name="PART_Header"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                ContentSource="Header"
                />
            </Border>
            <ItemsPresenter
              x:Name="ItemsHost"
              Grid.Row="1"
              Grid.Column="1"
              Grid.ColumnSpan="2"
              Visibility="Collapsed"
              />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="Bd"
                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                      >
                      <EasingColorKeyFrame
                        Value="{StaticResource SelectedBackgroundColor}"
                        KeyTime="0"
                        />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="SelectedInactive">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="Bd"
                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                      >
                      <EasingColorKeyFrame
                        Value="{StaticResource SelectedUnfocusedColor}"
                        KeyTime="0"
                        />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetName="ItemsHost"
                      Storyboard.TargetProperty="(UIElement.Visibility)"
                      >
                      <DiscreteObjectKeyFrame
                        Value="{x:Static Visibility.Visible}"
                        KeyTime="0"
                        />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Collapsed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false" />
                <Condition Property="Width" Value="Auto" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false" />
                <Condition Property="Height" Value="Auto" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Visibility" Value="{Binding Path=IsMatch, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
  </Style>
  <!--</SnippetTreeView>-->

</ResourceDictionary>
