<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  >
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Height" Value="1" />
    <Setter Property="Margin" Value="30 4 2 4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border
            BorderBrush="{StaticResource BrushSolidGrey35}"
            BorderThickness="1"
            />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MenuScrollViewer" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border
              Grid.Row="1"
              Grid.Column="0"
              >
              <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
            </Border>
            <RepeatButton
              Grid.Row="0"
              Grid.Column="0"
              Command="{x:Static ScrollBar.LineUpCommand}"
              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
              Focusable="False"
              Style="{StaticResource MenuScrollButton}"
              >
              <RepeatButton.Visibility>
                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0" FallbackValue="Visibility.Collapsed">
                  <Binding
                    Path="ComputedVerticalScrollBarVisibility"
                    RelativeSource="{RelativeSource TemplatedParent}"
                    />
                  <Binding
                    Path="VerticalOffset"
                    RelativeSource="{RelativeSource TemplatedParent}"
                    />
                  <Binding
                    Path="ExtentHeight"
                    RelativeSource="{RelativeSource TemplatedParent}"
                    />
                  <Binding
                    Path="ViewportHeight"
                    RelativeSource="{RelativeSource TemplatedParent}"
                    />
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path
                Data="{StaticResource UpArrow}"
                Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                />
            </RepeatButton>
            <RepeatButton
              Grid.Row="2"
              Grid.Column="0"
              Command="{x:Static ScrollBar.LineDownCommand}"
              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
              Focusable="False"
              Style="{StaticResource MenuScrollButton}"
              >
              <RepeatButton.Visibility>
                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100" FallbackValue="Visibility.Collapsed">
                  <Binding
                    Path="ComputedVerticalScrollBarVisibility"
                    RelativeSource="{RelativeSource TemplatedParent}"
                    />
                  <Binding
                    Path="VerticalOffset"
                    RelativeSource="{RelativeSource TemplatedParent}"
                    />
                  <Binding
                    Path="ExtentHeight"
                    RelativeSource="{RelativeSource TemplatedParent}"
                    />
                  <Binding
                    Path="ViewportHeight"
                    RelativeSource="{RelativeSource TemplatedParent}"
                    />
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path
                Data="{StaticResource DownArrow}"
                Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                />
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
  </Style>

  <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
    <Setter Property="HasDropShadow" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <Border
            x:Name="Chrome"
            Margin="0 0 5 5"
            Background="{StaticResource BrushSolidLightBlue}"
            BorderBrush="{StaticResource BrushSolidGrey55}"
            BorderThickness="1"
            >
            <Grid>
              <Rectangle
                Width="28"
                Margin="1 -2 1 -2"
                HorizontalAlignment="Left"
                Fill="{StaticResource BrushSolidMenuIconPlaceColor}"
                />

              <StackPanel
                ClipToBounds="True"
                IsItemsHost="True"
                KeyboardNavigation.DirectionalNavigation="Cycle"
                Orientation="Vertical"
                />
            </Grid>
            <Border.Style>
              <Style TargetType="{x:Type Border}">
                <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
                <Style.Triggers>
                  <DataTrigger Value="True" Binding="{Binding Tag, RelativeSource={RelativeSource Self}}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Effect">
                      <Setter.Value>
                        <DropShadowEffect
                          BlurRadius="4"
                          Opacity="0.5"
                          ShadowDepth="4"
                          />
                      </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="0 0 5 5" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Border.Style>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" Value="True">
              <Setter TargetName="Chrome" Property="Padding" Value="0 3 0 3" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  TopLevelHeader  -->
  <ControlTemplate
    x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
    TargetType="{x:Type MenuItem}"
    >
    <Border x:Name="Chrome">
      <Grid>
        <ContentPresenter
          Margin="6 3 6 3"
          ContentSource="Header"
          RecognizesAccessKey="True"
          />
        <Popup
          x:Name="Popup"
          AllowsTransparency="True"
          Focusable="False"
          IsOpen="{TemplateBinding IsSubmenuOpen}"
          Placement="Bottom"
          PopupAnimation="Fade"
          >
          <Border
            x:Name="SubmenuBorder"
            Background="{DynamicResource MenuPopupBrush}"
            BorderThickness="1"
            SnapsToDevicePixels="True"
            >
            <Border.BorderBrush>
              <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
            </Border.BorderBrush>
            <ScrollViewer
              CanContentScroll="True"
              Style="{StaticResource MenuScrollViewer}"
              >
              <StackPanel
                IsItemsHost="True"
                KeyboardNavigation.DirectionalNavigation="Cycle"
                />
            </ScrollViewer>
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter TargetName="Chrome" Property="Background" Value="{StaticResource BrushSolidYellow}" />
        <Setter TargetName="Chrome" Property="BorderBrush" Value="Transparent" />
      </Trigger>
      <Trigger Property="AllowsTransparency" Value="True" SourceName="Popup">
        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0 0 0 3" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  TopLevelItem  -->
  <ControlTemplate
    x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
    TargetType="{x:Type MenuItem}"
    >
    <Border x:Name="Chrome">
      <Grid>
        <ContentPresenter
          Margin="6 3 6 3"
          ContentSource="Header"
          RecognizesAccessKey="True"
          />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter TargetName="Chrome" Property="Background" Value="{StaticResource BrushSolidYellow}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  SubmenuItem  -->
  <ControlTemplate
    x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
    TargetType="{x:Type MenuItem}"
    >
    <Border
      x:Name="Chrome"
      Margin="2 0"
      BorderThickness="1"
      >
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
          <ColumnDefinition Width="13" />
        </Grid.ColumnDefinitions>

        <ContentPresenter
          x:Name="Icon"
          Grid.Column="0"
          Width="16"
          Height="16"
          Margin="4 0 10 0"
          VerticalAlignment="Center"
          ContentSource="Icon"
          />

        <Border
          x:Name="Check"
          Grid.Column="0"
          Width="16"
          Height="16"
          Margin="3 -2 10 0"
          BorderThickness="1"
          Visibility="Collapsed"
          >
          <Path
            x:Name="CheckMark"
            Width="16"
            Height="16"
            Data="F1M5,11L3,7 5,7 6,9 9,3 11,3 7,11 5,11z"
            Fill="Black"
            SnapsToDevicePixels="False"
            StrokeThickness="1"
            Visibility="Hidden"
            >
            <Path.Effect>
              <DropShadowEffect
                Opacity="0.4"
                ShadowDepth="2"
                />
            </Path.Effect>
          </Path>
        </Border>

        <ContentPresenter
          x:Name="HeaderHost"
          Grid.Column="1"
          Margin="0 1 0 0"
          ContentSource="Header"
          RecognizesAccessKey="True"
          />

        <TextBlock
          x:Name="InputGestureText"
          Grid.Column="2"
          Margin="5 2 0 2"
          Text="{TemplateBinding InputGestureText}"
          DockPanel.Dock="Right"
          />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="IsCheckable" Value="True">
        <Setter TargetName="Check" Property="Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter TargetName="Chrome" Property="Background" Value="{StaticResource BrushSolidYellow}" />
        <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="Icon" Property="Opacity" Value="0.5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate
    x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
    TargetType="{x:Type MenuItem}"
    >
    <Border
      x:Name="Border"
      BorderThickness="1"
      >
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
          <ColumnDefinition Width="13" />
        </Grid.ColumnDefinitions>
        <ContentPresenter
          x:Name="Icon"
          Margin="6 0 6 0"
          VerticalAlignment="Center"
          ContentSource="Icon"
          />
        <ContentPresenter
          x:Name="HeaderHost"
          Grid.Column="1"
          Margin="0 1 0 0"
          ContentSource="Header"
          RecognizesAccessKey="True"
          />
        <TextBlock
          x:Name="InputGestureText"
          Grid.Column="2"
          Text="{TemplateBinding InputGestureText}"
          DockPanel.Dock="Right"
          />
        <Path
          Grid.Column="3"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 0 7 L 4 3.5 Z"
          >
          <Path.Fill>
            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
          </Path.Fill>
        </Path>
        <Popup
          x:Name="Popup"
          Grid.Column="0"
          AllowsTransparency="True"
          Focusable="False"
          HorizontalOffset="-4"
          IsOpen="{TemplateBinding IsSubmenuOpen}"
          Placement="Right"
          PopupAnimation="Fade"
          >
          <Border
            x:Name="SubmenuBorder"
            Background="{DynamicResource MenuPopupBrush}"
            BorderThickness="1"
            SnapsToDevicePixels="True"
            >
            <Border.BorderBrush>
              <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
            </Border.BorderBrush>
            <ScrollViewer
              CanContentScroll="True"
              Style="{StaticResource MenuScrollViewer}"
              >
              <StackPanel
                IsItemsHost="True"
                KeyboardNavigation.DirectionalNavigation="Cycle"
                />
            </ScrollViewer>
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter TargetName="Border" Property="Background">
          <Setter.Value>
            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
              <GradientStop Offset="0" Color="Transparent" />
              <GradientStop Offset="1" Color="{DynamicResource ControlMouseOverColor}" />
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="Border" Property="BorderBrush">
          <Setter.Value>
            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
              <GradientStop Offset="0" Color="{DynamicResource BorderMediumColor}" />
              <GradientStop Offset="1" Color="Transparent" />
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="AllowsTransparency" Value="True" SourceName="Popup">
        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0 3 0 3" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground">
          <Setter.Value>
            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  MenuItem Style  -->
  <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Style.Triggers>
      <Trigger Property="Role" Value="TopLevelHeader">
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="Role" Value="TopLevelItem">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
      </Trigger>
      <Trigger Property="Role" Value="SubmenuHeader">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="Role" Value="SubmenuItem">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>
