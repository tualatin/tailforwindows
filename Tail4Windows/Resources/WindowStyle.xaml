<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sw="clr-namespace:Org.Vs.TailForWin.UI.StyleableWindow">

  <sw:WindowMinimizeCommand x:Key="MinimizeCommand"/>
  <sw:WindowMaximizeCommand x:Key="MaximizeCommand"/>
  <sw:WindowCloseCommand x:Key="CloseCommand"/>
  <SolidColorBrush x:Key="WindowForeColor" Color="WhiteSmoke"/>

  <!-- Buttons -->
  <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="Chrome" BorderBrush="Transparent" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" BorderThickness="1">
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Chrome" Property="BorderBrush" Value="#E5C365"/>
              <Setter TargetName="Chrome" Property="Background" Value="#FFFCF4"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="FontFamily" Value="Webdings"/>
    <Setter Property="FontSize" Value="13.333" />
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="Margin" Value="0,2,3,0"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="Gray" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- Window icon-->
  <Style TargetType="{x:Type Image}" x:Key="WindowIcon">
    <Setter Property="Height" Value="25"/>
    <Setter Property="Width" Value="25"/>
  </Style>

  <!-- Window template -->
  <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
      <Grid Background="#D6DBE9">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="28"/>
            <RowDefinition/>
          </Grid.RowDefinitions>

          <Grid Margin="7,2,7,0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition/>
              <ColumnDefinition Width="78"/>
            </Grid.ColumnDefinitions>

            <Label sw:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource CloseCommand}" HorizontalAlignment="Center" Margin="0,2,0,0" 
                   sw:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Padding="0">
              <Image Style="{StaticResource WindowIcon}" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Icon}"              
                     Width="16" sw:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"                                        
                     sw:ShowSystemMenuBehavior.LeftButtonShowAt="{Binding ElementName=WindowContent}"/>
            </Label>

            <Border Grid.Column="1" HorizontalAlignment="Stretch" Background="Transparent"
                    sw:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource MaximizeCommand}" 
                    sw:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    sw:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                    sw:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" 
                    sw:ShowSystemMenuBehavior.RightButtonShow="true">
              
              <Label Content="{TemplateBinding Property=Title}" Margin="8,0,0,0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                 HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}">
              </Label>
            </Border>

            <StackPanel Grid.Column="2" Orientation="Horizontal">
              <Button DockPanel.Dock="Right" Style="{StaticResource WindowButtonStyle}" Command="{StaticResource MinimizeCommand}" Width="24"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Content="0"/>
              <Button DockPanel.Dock="Right" Style="{StaticResource WindowButtonStyle}" Command="{StaticResource MaximizeCommand}" Width="24"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Content="1"/>
              <Button DockPanel.Dock="Right"  Style="{StaticResource WindowButtonStyle}" Command="{StaticResource CloseCommand}" Width="24"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Content="r"/>
            </StackPanel>
          </Grid>

          <Border Grid.Row="1">
            <Grid Margin="2" Background="{TemplateBinding Background}">
              <AdornerDecorator>
                <ContentPresenter x:Name="WindowContent"/>
              </AdornerDecorator>
              <ResizeGrip  x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
            </Grid>
          </Border>
        </Grid>
        <Thumb x:Name="ThumbTop" Height="6" Margin="14,0" VerticalAlignment="Top" Cursor="SizeNS"  Opacity="0" 
             sw:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        <Thumb x:Name="ThumbTopLeft" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="SizeNWSE"  Opacity="0"
             sw:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        <Thumb x:Name="ThumbBottom" Height="6" Margin="14,0" VerticalAlignment="Bottom" Cursor="SizeNS" Opacity="0" 
             sw:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        <Thumb x:Name="ThumbTopRight" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNESW"  Opacity="0" 
             sw:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        <Thumb x:Name="ThumbRight" HorizontalAlignment="Right" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0"
             sw:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        <Thumb x:Name="ThumbBottomRight" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE"  Opacity="0"
             sw:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        <Thumb x:Name="ThumbLeft" HorizontalAlignment="Left" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" 
             sw:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        <Thumb x:Name="ThumbBottomLeft" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Left" Cursor="SizeNESW"  Opacity="0"
             sw:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
      </Grid>
    </Border>

    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
          <Condition Property="WindowState" Value="Normal"/>
        </MultiTrigger.Conditions>
        <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="Tail4WindowStyle" TargetType="{x:Type Window}">
    <Setter Property="WindowStyle" Value="None"/>
    <Setter Property="AllowsTransparency" Value="True"/>
    <Setter Property="Background" Value="White"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="BorderBrush" Value="#999999"/>
    <Setter Property="Template" Value="{StaticResource WindowTemplate}"/>
  </Style>

</ResourceDictionary>