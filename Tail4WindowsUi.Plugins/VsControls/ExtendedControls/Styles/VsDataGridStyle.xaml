<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:colorResources="clr-namespace:Org.Vs.TailForWin.Ui.PlugIns.Resources"
  xmlns:userControls="clr-namespace:Org.Vs.TailForWin.Ui.PlugIns.VsControls.ExtendedControls"
  >

  <!--  Style and template for the button in the upper left corner of the DataGrid.  -->
  <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type userControls:VsDataGrid}}" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Rectangle
              x:Name="Border"
              SnapsToDevicePixels="True"
              >
              <Rectangle.Stroke>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                  <GradientStop Offset="0" Color="{StaticResource ColorGrey10}" />
                  <GradientStop Offset="1" Color="{StaticResource ColorGrey20}" />
                </LinearGradientBrush>
              </Rectangle.Stroke>

              <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                  <GradientStop Offset="0" Color="{DynamicResource {x:Static colorResources:ColorResources.ColorWhiteKey}}" />
                  <GradientStop Offset="1" Color="{StaticResource ColorGrey10}" />
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>

            <Polygon
              x:Name="Arrow"
              Margin="8 8 3 3"
              HorizontalAlignment="Right"
              VerticalAlignment="Bottom"
              Opacity="0.15"
              Points="0,10 10,10 10,0"
              Stretch="Uniform"
              >
              <Polygon.Fill>
                <SolidColorBrush Color="{StaticResource ColorGrey10}" />
              </Polygon.Fill>
            </Polygon>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="Border"
                      Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                      >
                      <EasingColorKeyFrame
                        Value="{StaticResource ColorOrange}"
                        KeyTime="0"
                        />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="Border"
                      Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                      >
                      <EasingColorKeyFrame
                        Value="{StaticResource ColorOrangePressed}"
                        KeyTime="0"
                        />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetName="Arrow"
                      Storyboard.TargetProperty="(UIElement.Visibility)"
                      >
                      <DiscreteObjectKeyFrame
                        Value="{x:Static Visibility.Collapsed}"
                        KeyTime="0"
                        />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=DataGridCellStyle}" TargetType="{x:Type DataGridCell}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True"
            >
            <Grid>
              <ContentPresenter
                VerticalAlignment="Center"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
      </Trigger>

      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="True" />
          <Condition Property="Selector.IsSelectionActive" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>

  <!--  Style and template for the resize control on the DataGridRowHeader.  -->
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=RowHeaderGripperStyle}" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeNS" />
    <Setter Property="Height" Value="8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Style and template for the DataGridRowHeader.  -->
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=DataGridRowHeaderStyle}" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <Border
              x:Name="rowHeaderBorder"
              Width="10"
              BorderThickness="1"
              >
              <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                  <GradientStop Offset="0" Color="{DynamicResource {x:Static colorResources:ColorResources.BorderLightColorKey}}" />
                  <GradientStop Offset="1" Color="{StaticResource ColorGrey03}" />
                </LinearGradientBrush>
              </Border.BorderBrush>

              <Border.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                  <GradientStop Offset="0" Color="{DynamicResource {x:Static colorResources:ColorResources.ColorWhiteKey}}" />
                  <GradientStop Offset="1" Color="{StaticResource ColorGrey03}" />
                </LinearGradientBrush>
              </Border.Background>

              <StackPanel Orientation="Horizontal">
                <ContentPresenter
                  VerticalAlignment="Center"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                  />
                <Control
                  SnapsToDevicePixels="False"
                  Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                  Visibility="{Binding (Validation.HasError), Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                  />
              </StackPanel>
            </Border>

            <Thumb
              x:Name="PART_TopHeaderGripper"
              VerticalAlignment="Top"
              Style="{DynamicResource {x:Static userControls:VsDataGrid.RowHeaderGripperStyleKey}}"
              />
            <Thumb
              x:Name="PART_BottomHeaderGripper"
              VerticalAlignment="Bottom"
              Style="{DynamicResource {x:Static userControls:VsDataGrid.RowHeaderGripperStyleKey}}"
              />
            <VisualStateManager.VisualStateGroups>
              <!--
                This example does not specify an appearance for every
                state.  You can add storyboard to the states that are listed
                to change the appearance of the DataGridRowHeader when it is
                in a specific state.
              -->
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Normal_CurrentRow" />
                <VisualState x:Name="Unfocused_EditingRow" />
                <VisualState x:Name="Normal_EditingRow" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="rowHeaderBorder"
                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                      >
                      <EasingColorKeyFrame
                        Value="#CAE5ED"
                        KeyTime="0"
                        />
                    </ColorAnimationUsingKeyFrames>

                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="rowHeaderBorder"
                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                      >
                      <EasingColorKeyFrame
                        Value="#029cc7"
                        KeyTime="0"
                        />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver_CurrentRow" />
                <VisualState x:Name="MouseOver_Unfocused_EditingRow" />
                <VisualState x:Name="MouseOver_EditingRow" />
                <VisualState x:Name="MouseOver_Unfocused_Selected" />
                <VisualState x:Name="MouseOver_Selected" />
                <VisualState x:Name="MouseOver_Unfocused_CurrentRow_Selected" />
                <VisualState x:Name="MouseOver_CurrentRow_Selected" />
                <VisualState x:Name="Unfocused_Selected" />
                <VisualState x:Name="Unfocused_CurrentRow_Selected" />
                <VisualState x:Name="Normal_CurrentRow_Selected" />
                <VisualState x:Name="Normal_Selected" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=DataGridRowStyle}" TargetType="{x:Type DataGridRow}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <Border
            x:Name="DGR_Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True"
            >
            <SelectiveScrollingGrid>
              <SelectiveScrollingGrid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </SelectiveScrollingGrid.ColumnDefinitions>

              <SelectiveScrollingGrid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </SelectiveScrollingGrid.RowDefinitions>

              <DataGridCellsPresenter
                Grid.Column="1"
                ItemsPanel="{TemplateBinding ItemsPanel}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                />

              <DataGridDetailsPresenter
                Grid.Row="1"
                Grid.Column="1"
                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                Visibility="{TemplateBinding DetailsVisibility}"
                />

              <DataGridRowHeader
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                />
            </SelectiveScrollingGrid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    <Setter Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock
            Margin="2 0 0 0"
            VerticalAlignment="Center"
            Text="!"
            Foreground="Red"
            />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsNewItem" Value="True">
        <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
      </Trigger>

      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource BrushSolidGrey03}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!--  Style and template for the resize control on the DataGridColumnHeader.  -->
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=ColumnHeaderGripperStyle}" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeWE" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Width" Value="8" />
  </Style>

  <!--  Style and template for the DataGridColumnHeader.  -->
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=DataGridColumnHeaderStyle}" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
          <GradientStop Offset="0" Color="{DynamicResource {x:Static colorResources:ColorResources.ColorWhiteKey}}" />
          <GradientStop Offset="1" Color="{StaticResource ColorGrey03}" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Height" Value="23" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <Border
              x:Name="columnHeaderBorder"
              Padding="3 0 3 0"
              BorderThickness="1"
              >
              <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                  <GradientStop Offset="0" Color="{DynamicResource {x:Static colorResources:ColorResources.BorderLightColorKey}}" />
                  <GradientStop Offset="1" Color="{StaticResource ColorGrey20}" />
                </LinearGradientBrush>
              </Border.BorderBrush>

              <Border.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                  <GradientStop Offset="0" Color="{DynamicResource {x:Static colorResources:ColorResources.ColorWhiteKey}}" />
                  <GradientStop Offset="1" Color="{StaticResource ColorGrey03}" />
                </LinearGradientBrush>
              </Border.Background>

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ContentPresenter
                  Grid.Column="0"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                  />

                <Path
                  x:Name="SortArrow"
                  Grid.Column="1"
                  Width="8"
                  Height="6"
                  Margin="2 0 5 0"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center"
                  Data="M0,0 L1,0 0.5,1 z"
                  Fill="Black"
                  Opacity="0.5"
                  RenderTransformOrigin="0.5,0.4"
                  Stretch="Fill"
                  Visibility="Collapsed"
                  />
              </Grid>
            </Border>

            <Thumb
              x:Name="PART_LeftHeaderGripper"
              HorizontalAlignment="Left"
              Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=ColumnHeaderGripperStyle}}"
              />

            <Thumb
              x:Name="PART_RightHeaderGripper"
              HorizontalAlignment="Right"
              Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=ColumnHeaderGripperStyle}}"
              />
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>

  <!--  Style and template for the DataGridColumnHeadersPresenter.  -->
  <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
          <Grid>
            <DataGridColumnHeader
              x:Name="PART_FillerColumnHeader"
              IsHitTestVisible="False"
              />
            <ItemsPresenter />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
    <!--  Override Highlighting so that its easy to see what is selected even when the control is not focused  -->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border
            x:Name="Chrome"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            >
            <ContentPresenter VerticalAlignment="Center" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" />
          <Condition Value="False" Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" />
        </MultiDataTrigger.Conditions>

        <MultiDataTrigger.Setters>
          <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
          <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
        </MultiDataTrigger.Setters>
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type userControls:VsDataGrid}" TargetType="{x:Type userControls:VsDataGrid}">
    <Setter Property="AlternatingRowBackground" Value="Azure" />
    <Setter Property="AutoGenerateColumns" Value="False" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="CanUserReorderColumns" Value="False" />
    <Setter Property="CanUserSortColumns" Value="False" />
    <Setter Property="CellStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=DataGridCellStyle}}" />
    <Setter Property="ColumnHeaderStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=DataGridColumnHeaderStyle}}" />
    <Setter Property="EnableColumnVirtualization" Value="False" />
    <Setter Property="EnableRowVirtualization" Value="True" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="HeadersVisibility" Value="Column" />
    <Setter Property="HorizontalGridLinesBrush" Value="#FFBEBEBE" />
    <Setter Property="MinRowHeight" Value="15" />
    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
    <Setter Property="RowHeaderStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=DataGridRowHeaderStyle}}" />
    <Setter Property="RowHeight" Value="25" />
    <Setter Property="RowStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type userControls:VsDataGrid}, ResourceId=DataGridRowStyle}}" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="SelectionMode" Value="Single" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type userControls:VsDataGrid}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True"
            >

            <ScrollViewer
              x:Name="DG_ScrollViewer"
              Focusable="False"
              VerticalScrollBarVisibility="Auto"
              >
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Button
                      x:Name="PART_SelectAllButton"
                      Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                      Command="{x:Static DataGrid.SelectAllCommand}"
                      Focusable="False"
                      Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                      />

                    <DataGridColumnHeadersPresenter
                      x:Name="PART_ColumnHeadersPresenter"
                      Grid.Row="0"
                      Grid.Column="1"
                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                      />

                    <ScrollContentPresenter
                      x:Name="PART_ScrollContentPresenter"
                      Grid.Row="1"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      CanContentScroll="{TemplateBinding CanContentScroll}"
                      />

                    <ScrollBar
                      x:Name="PART_VerticalScrollBar"
                      Grid.Row="1"
                      Grid.Column="2"
                      Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                      Maximum="{TemplateBinding ScrollableHeight}"
                      Orientation="Vertical"
                      ViewportSize="{TemplateBinding ViewportHeight}"
                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                      />

                    <Grid
                      Grid.Row="2"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      >
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>

                      <ScrollBar
                        x:Name="PART_HorizontalScrollBar"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        Orientation="Horizontal"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                        />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource {x:Static colorResources:ColorResources.BrushSolidGrey35Key}}" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>

